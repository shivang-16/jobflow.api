// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  email       String   @unique
  password    String?
  job_statuses      String[]  @default(["bookmarked", "applied", "accepted", "rejected"]) 
  bookmarked_jobs  String[]
  jobs        Tracked_Jobs[] 
  userJobs    User_Jobs[]
  created_at  DateTime @default(now())
}

// Jobs tracked by users
model Tracked_Jobs {
  id       String  @id @default(uuid()) @db.Uuid
  status   String  @default("applied")

  userId   String  @db.Uuid
  user     User    @relation(fields: [userId], references: [id])

  jobId    String  @db.Uuid
  job      Job     @relation(fields: [jobId], references: [id]) // Relation to the Job model

  @@unique([jobId, userId]) // Ensures a user can only apply to a job once
}

// Jobs create by user(all )
model User_Jobs {
  id            String  @id @default(uuid()) @db.Uuid
  title         String
  job_link      String?
  job_type      String?
  apply_link    String?
  job_location  String?
  job_salary    String?  
  job_description    String? 
  skills_required    String? 
  source        String?
  source_logo   String?
  posted        DateTime? @default(now())
  status   String  @default("applied")

  userId   String  @db.Uuid
  user     User    @relation(fields: [userId], references: [id])

  companyId     String?   @db.Uuid
  company       Company?  @relation(fields: [companyId], references: [id])
  @@unique([title, companyId, userId])
}

model Company {
  id               String   @id @default(uuid()) @db.Uuid
  company_name     String
  description      String?
  about            Json?
  company_link     String?
  company_logo     String?
  socials          Json?    // JSON field to store all social media links

  jobs             Job[]
  userJobs         User_Jobs[]

  @@unique([company_name]) // Ensures that company names are unique
}

model Job {
  id            String   @id @default(uuid()) @db.Uuid
  title         String
  job_link      String
  job_type      String
  apply_link    String?
  job_location  String?
  job_salary    String?  
  job_description    String? 
  skills_required    String? 
  source        String
  source_logo   String?
  posted        DateTime @default(now())
  created_at    DateTime @default(now())

  companyId     String   @db.Uuid
  company       Company  @relation(fields: [companyId], references: [id])

  appliedJobs       Tracked_Jobs[]  // Relation to the tracked_jobs model

  @@unique([title, companyId])  // This creates a unique index on title and companyId
}
